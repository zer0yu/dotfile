# --> Catppuccin (Macchiato)
# thm_bg="#24273a"
# thm_fg="#cad3f5"
# thm_cyan="#91d7e3"
# thm_black="#1e2030"
# thm_gray="#363a4f"
# thm_magenta="#c6a0f6"
# thm_pink="#f5bde6"
# thm_red="#ed8796"
# thm_green="#a6da95"
# thm_yellow="#eed49f"
# thm_blue="#8aadf4"
# thm_orange="#f5a97f"
# thm_black4="#5b6078"

# --> Catppuccin (Mocha)
thm_bg="#1e1e2e"
thm_fg="#cdd6f4"
thm_cyan="#89dceb"
thm_black="#181825"
thm_gray="#313244"
thm_magenta="#cba6f7"
thm_pink="#f5c2e7"
thm_red="#f38ba8"
thm_green="#a6e3a1"
thm_yellow="#f9e2af"
thm_blue="#89b4fa"
thm_orange="#fab387"
thm_black4="#585b70"

thm_mocha_mantle="#181825"
thm_mocha_overlay0="#6c7086"

# status
set -g status-interval 1
set -g escape-time 10
set -g focus-events on
set -g status "on"
set-option -g status-position bottom
# set -g status-bg "${thm_bg}"
set -g status-bg "${thm_mocha_mantle}"
set -g status-justify "left"
set -g status-left-length "100"
set -g status-right-length "100"

# messages
set -g message-style "fg=${thm_cyan},bg=${thm_gray},align=centre"
set -g message-command-style "fg=${thm_cyan},bg=${thm_gray},align=centre"

# panes
set -g pane-border-style "fg=${thm_gray}"
set -g pane-active-border-style "fg=${thm_blue}"

# windows
setw -g window-status-activity-style "fg=${thm_fg},bg=${thm_bg},none"
setw -g window-status-separator "#[fg=${thm_gray},bg=${thm_mocha_mantle}]"
setw -g window-status-style "fg=${thm_fg},bg=${thm_bg},none"

# status-line
show_config="#[nobold,nounderscore,noitalics]"
show_window="#[fg=$thm_bg,bg=$thm_pink]  #[fg=$thm_fg,bg=$thm_mocha_mantle] #W "
show_sessions="#[fg=$thm_bg]#{?client_prefix,#[bg=$thm_red],#[bg=$thm_green]}  #[fg=$thm_fg,bg=$thm_mocha_mantle] #S "
# show_date_time="#[fg=$thm_bg,bg=$thm_blue]  #[fg=$thm_fg,bg=$thm_mocha_mantle] %Y-%m-%d %H:%M:%S "

set -g status-left ""
# set -g status-right "$show_config$show_window$show_sessions$show_date_time"
set -g status-right "$show_config$show_window$show_sessions"

# window-status
show_directory_in_window_status="#[nobold,nounderscore,noitalics]#[fg=$thm_bg,bg=$thm_blue] #I #[fg=$thm_mocha_overlay0,bg=$thm_mocha_mantle] #{b:pane_current_path} "
show_directory_in_window_status_current="#[bold]#[fg=$thm_bg,bg=$thm_orange] #I #[fg=$thm_fg,bg=$thm_bg] #{b:pane_current_path} "

setw -g window-status-format "${show_directory_in_window_status}"
setw -g window-status-current-format "${show_directory_in_window_status_current}"

# modes
setw -g clock-mode-colour "${thm_blue}"
setw -g mode-style "fg=${thm_pink} bg=${thm_black4} bold"

# terminal colors
set  -g default-terminal "screen-256color"
# set  -g default-terminal "tmux-256color"
set -ag terminal-overrides ",alacritty:RGB,xterm-256color:RGB"

# start window numbers at 1 to match keyboard order with tmux window order
set-option -g base-index 1
set-window-option -g pane-base-index 1

# renumber windows sequentially after closing any of them
set-option -g renumber-windows on

# disable the repeat
set-option -g repeat-time 0

# disable escape delay
set-option -sg escape-time 0

# auto window rename
set-option -g automatic-rename on

# enable activity alerts
set-window-option -g monitor-activity on
set-option -g visual-activity off

# increase scrollback lines
set-option -g history-limit 50000

# enable clipboard
set-option -g set-clipboard on

# mouse behavior
set-option -g mouse on

# truecolor support
set-option -ga terminal-overrides ",xterm-256color:Tc"

# default terminal is 256 colors
set-option -g default-terminal "xterm-256color"

# aggressive resize
set-window-option -g aggressive-resize off

# iTerm2 window name
set-option -g set-titles on

# remap prefix from 'C-b' to 'C-\'
set-option -g prefix 'C-\'
unbind-key C-b
bind-key 'C-\' send-prefix

# switch windows
bind -r n next-window
bind -r p previous-window

# moving between panes.
bind-key -r h select-pane -L
bind-key -r j select-pane -D
bind-key -r k select-pane -U
bind-key -r l select-pane -R

# resize panes with vim movement keys
bind-key -r H resize-pane -L 5
bind-key -r J resize-pane -D 5
bind-key -r K resize-pane -U 5
bind-key -r L resize-pane -R 5

# remove confirmation questions when closing windows/panes
bind-key x kill-pane
bind-key & kill-window

# go to last window
bind-key ^ last-window

# splitting panes with current path
bind-key c new-window -c "#{pane_current_path}"
bind-key % split-window -h -c "#{pane_current_path}"
bind-key '"' split-window -v -c "#{pane_current_path}"

# move panes to another window
bind-key M-1 join-pane -t :1
bind-key M-2 join-pane -t :2
bind-key M-3 join-pane -t :3
bind-key M-4 join-pane -t :4
bind-key M-5 join-pane -t :5
bind-key M-6 join-pane -t :6
bind-key M-7 join-pane -t :7
bind-key M-8 join-pane -t :8
bind-key M-9 join-pane -t :9

# Use vim keybindings in copy mode
set-window-option -g mode-keys vi

# Update default binding of `Enter` and `Space to also use copy-pipe
unbind-key -T copy-mode-vi Enter
unbind-key -T copy-mode-vi Space

bind-key -T edit-mode-vi Up send-keys -X history-up
bind-key -T edit-mode-vi Down send-keys -X history-down

# begin selection as in Vim
bind-key -T copy-mode-vi v send-keys -X begin-selection
bind-key -T copy-mode-vi C-v send -X rectangle-toggle

# copy text in copy mode
bind-key -T copy-mode-vi y send -X copy-selection-and-cancel

# popup window for finding command to run
bind-key R display-popup -E "tmux-commands | xargs -I{} tmux send-keys '{}' enter"
bind-key C display-popup -E "tmux-commands | xargs tmux new-window -c '#{pane_current_path}'"
bind-key | display-popup -E "tmux-commands | xargs tmux split-window -v -c '#{pane_current_path}'"
bind-key - display-popup -E "tmux-commands | xargs tmux split-window -h -c '#{pane_current_path}'"

# popup window for finding session to switch
bind-key S display-popup -E "tmux-sessions | xargs tmux switch-client -t"
bind-key P if-shell -F '#{==:#{session_name},popup}' {
  detach-client
} {
  if-shell -F '#{e|==:#{N/s:popup},0}' {
    new-session -d -s 'popup' 'tmux source-file ~/.tmux/sessions/popup.tmux.conf'
  }
  display-popup -w 80% -h 80% -E "tmux attach-session -t popup"
}

# shortcut for synchronize-panes toggle
bind-key I set-window-option synchronize-panes



# reload config file
bind-key r source-file ~/.tmux.conf \; display-message "~/.tmux.conf reloaded"